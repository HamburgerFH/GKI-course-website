## KI bei der Optimierung -- Einführung

**Optimierung in der Wirtschaft**

* **Ziel**: Das _beste Ergebnis_ aus einer Vielzahl möglicher Lösungen erzielen.
* **Anwendung**: Finanzen, Marketing, Produktion und Logistik.

**KI-basierte Optimierungsansätze**

* **Schwarmintelligenz**:
    * Basiert auf Algorithmen, die das _Verhalten von Systemen_ wie Insekten- oder Vogelschwärmen simulieren.
    * Wird häufig bei **kombinatorischer Optimierung** eingesetzt (optimale Lösung aus einer großen Anzahl möglicher Lösungen finden).

* **Weitere Ansätze**:
    * Künstliche neuronale Netze
    * Genetische Algorithmen

* **Fokus jetzt: Schwarmintelligenz**


### Optimierung {.unlisted}

* **Definition**: Prozess der **Minimierung** oder **Maximierung** eines Wertes unter bestimmten **Nebenbedingungen**, um ein _optimales Ergebnis_ für eine Entscheidung zu erreichen

* **Beispiele**:

    * Maximierung des Gewinns (Produktionsprogramm)
    * Minimierung von Wartezeiten (Callcenter)
    * Minimierung der Weglängen (**Travelling Salesman**)
    * Maximierung des Nutzens (**Knappsackproblem**)
    * Auftragsoptimierung (Losgrößenplanung)
    * Investitionsportfolio-Optimierung

**Herausforderungen**

Eine optimale Lösung ist oft nicht möglich wegen:

* _Mehreren Zielsetzungen_
* Ungenügender Daten
* Hoher **Modellkomplexität**
* Unsicherheiten bei Daten, Zusammenhängen und Entwicklungen
* Fehlende _Lösungsverfahren_

**Lösungsmethoden**

Abhängig von der Aufgabe können verschiedene Methoden sinnvoll sein:

* Optimierungsverfahren
* **Heuristiken**
* Simulationsverfahren

### Unterscheidung Optimierung und Heuristik {.unlisted}

* **Heuristik** (griechisch: _"entdecken"_, _"finden"_)

    * **Definition**: Eine Methode zur Problemlösung oder Entscheidungsfindung, die auf vorhandenem Wissen, Regeln und Verfahren basiert
    * **Zweck**: Schnelle und effiziente Alternative zu komplexen Optimierungsverfahren

* **Unterschied zur Optimierung**

  * **Heuristik**: Strebt keine exakte Lösung an, sondern eine _gute Näherung_, die schnell gefunden werden kann
  * **Optimierung**: Strebt eine _exakte, optimale Lösung_ an, benötigt dafür aber möglicherweise mehr Zeit und Rechenleistung

* **Beispiele für Heuristiken**

  * **Greedy Algorithmus**: Wählt die _augenblicklich beste Option_ ohne Berücksichtigung späterer Auswirkungen
  * **Hill Climbing**: Verbessert eine Lösung durch _kleine Änderungen_ und anschließende Bewertung
  * **Simulated Annealing**: Basiert auf dem Konzept des _absichtlichen Annehmens schlechter Lösungen_, um potenziell bessere zu finden
  * **Scatter Search**: Verfolgt und verbessert _mehrere Lösungen gleichzeitig_ über einen längeren Zeitraum

* **Anekdote zur Veranschaulichung (Apfelbauer)**
  * **Problem**: Ein Bauer muss schnell eine unvorhersehbare Menge Äpfel zum maximalen Gewinn verkaufen
  * **Heuristik**: Er passt den Preis iterativ an, je nachdem, ob zu viele oder zu wenige Äpfel verkauft werden
  * **Ergebnis**: Die einfache Heuristik führt schnell zu einem guten Preis und demonstriert den Nutzen für _schnelle, effiziente Entscheidungen_ in realen Situationen

### Optimierungsprobleme: **Traveling Salesman Problem (TSP)** {.unlisted}

* **Kontext**: Das TSP ist ein bekanntes Problem der **Kombinatorik** und **algorithmischen Optimierung**
* **Ziel**: Ein Handelsvertreter sucht die _kürzeste Strecke_, um eine bestimmte Anzahl an Städten zu besuchen und zum Ausgangspunkt zurückzukehren
* **Bedingungen**:
    * Jede Stadt wird nur _einmal_ besucht
    * Die Reihenfolge der besuchten Städte ist wichtig
* **Anwendungen**: Logistik, Verkehrswesen, Elektronik, Computerwissenschaften

**Mathematische Formulierung:**

* Das TSP wird als Graphenproblem auf einem vollständigen Graphen $G=(V,E)$ formuliert:
    * $V$: Menge der Knoten (_vertices_), die die Städte repräsentieren
    * $E$: Menge der Kanten (_edges_), die die Entfernungen zwischen den Städten darstellen
    * Jede Kante hat ein Gewicht $w_{i,j}$, das der Entfernung zwischen Stadt $i$ und $j$ entspricht

* **Ziel des TSP**: Eine Rundreise, d.h. Permutation $\pi = (v_1, v_2, ..., v_n)$, mit minimalen Kosten $c(\pi)$ zu finden wobei die **Kostenfunktion** gegeben ist durch:
$$c(\pi) = \sum_{i=1}^{n-1} w_{v_i v_{i+1}} + w_{v_n v_1}$$

**Komplexität:**

* Das TSP ist ein **NP-schweres Problem**
* **Bedeutung**: Es gibt _keine bekannten effizienten Algorithmen_, um die optimale Lösung für große Probleme zu finden
* **Ansatz**: Es werden z.B. **heuristische Algorithmen** genutzt, um _gute oder suboptimale Lösungen_ zu finden

### KI-Algorithmen zur Optimierung {.unlisted}

**Multiagentensysteme (MAS)**

* **Definition**: KI-Verfahren zur Optimierung, das aus interagierenden **Agenten** (kleine Einheiten mit Entscheidungs-/Handlungsmöglichkeiten) besteht
* **Unterschied zu klassischen Systemen**: Keine zentrale Instanz, stattdessen _parallele Verarbeitung_ durch viele kleine Einheiten
* **Systemverhalten**: Entsteht durch das Verhalten und die Interaktion der einzelnen Agenten, gesteuert durch **Koordinationsmechanismen**

**Vorteile von MAS**

* **Flexibilität**
* **Robustheit**: Kein "**single point of failure**", da kein einzelner Agent für das Gesamtsystem unverzichtbar ist
* **Geschwindigkeit**: Durch Parallelisierung
* **Reduktion der Komplexität**: Durch Selbstorganisation oder **Emergenz** (_Effekte auf Systemebene, die nicht direkt aus den individuellen Algorithmen ableitbar sind_)

**Design-Herausforderungen**

* **Agent-Design**: Konstruktion der einzelnen, autonomen Agenten
* **Society-Design**: Interaktion von Agenten mit unterschiedlichen Interessen
* **Inhaltliche Herausforderungen**:
    * Zerlegung von Aufgaben und Zielen
    * Synthese von Teilergebnissen
    * Kommunikation und Repräsentation von Wissen
* **Technische Herausforderungen**:
    * Entwicklung von Implementierungs-Plattformen
    * Balancierung von lokaler Berechnung und Kommunikation
    * Vermeidung von chaotischem Systemverhalten
    * Verhandlung von Protokollen

**Anwendungen**

* **Trampelpfade** (wie in "Ameisen-Algorithmen")
* Kulturelle Diffusion
* **Spieltheorie** (z.B. Prisoners Dilemma)
* Segregation
* **Agentenbasierte Modelle** in Wirtschafts- und Sozialwissenschaften
